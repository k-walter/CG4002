syntax = "proto3";

import "google/protobuf/empty.proto";
option go_package = "./";

service Relay {
  // glove (MPU6050) data for AI
  rpc Gesture(SensorData) returns (google.protobuf.Empty) {}
  // detected by infrared (KY-022 rx, KY-005 tx)
  rpc Shoot(Event) returns (google.protobuf.Empty) {}
  rpc Shot(Event) returns (google.protobuf.Empty) {}
}

// Not in use impl with MQTT
service Viz {
  rpc Update(State) returns (google.protobuf.Empty) {}
  rpc InFov(Event) returns (InFovResp) {} // Option<InFovResp>
}

service Pynq {
  rpc Emit(SensorData) returns (google.protobuf.Empty) {}
  rpc Poll(google.protobuf.Empty) returns (Event) {}
}

message SensorData {
  uint32 player = 1;
  uint64 time = 2; // No need to fill, synchronized on engine
  // Data
  uint32 roll = 3;
  uint32 pitch = 4;
  uint32 yaw = 5;
  uint32 x = 6;
  uint32 y = 7;
  uint32 z = 8;
}

message InFovResp {
  uint32 player = 1;
  uint64 time = 2;
  bool inFov = 3;
}

message Event {
  uint32 player = 1;
  uint64 time = 2;
  Action action = 3;
}

message State {
  PlayerState p1 = 1 [json_name="p1"];
  PlayerState p2 = 2 [json_name="p2"];
}

message PlayerState {
  uint32 hp = 1 [json_name="hp"];
  Action action = 2 [json_name="action"];
  uint32 bullets = 3 [json_name="bullets"];
  uint32 grenades = 4 [json_name="grenades"];
  double shield_time = 5 [json_name="shield_time"];
  uint32 shield_health = 6 [json_name="shield_health"];
  uint32 num_deaths = 7 [json_name="num_deaths"];
  uint32 num_shield = 8 [json_name="num_shield"];
}

enum Action {
    // public
    none = 0;
    grenade = 1;
    reload = 2;
    shoot = 3;
    logout = 4;
    shield = 5;
    // private
    shot = 6;
}